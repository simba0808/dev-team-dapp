import {twMerge} from 'tailwind-merge';

import type {FC} from 'react';

const PATHS = [
  'M250.5 28a24 24 0 0 1 24 0l36.621778264911 21.143593539449a24 24 0 0 1 12 20.784609690827l0 42.287187078898a24 24 0 0 1 -12 20.784609690827l-36.621778264911 21.143593539449a24 24 0 0 1 -24 0l-36.621778264911 -21.143593539449a24 24 0 0 1 -12 -20.784609690827l0 -42.287187078898a24 24 0 0 1 12 -20.784609690827',
  'M125.5 28a24 24 0 0 1 24 0l36.621778264911 21.143593539449a24 24 0 0 1 12 20.784609690827l0 42.287187078898a24 24 0 0 1 -12 20.784609690827l-36.621778264911 21.143593539449a24 24 0 0 1 -24 0l-36.621778264911 -21.143593539449a24 24 0 0 1 -12 -20.784609690827l0 -42.287187078898a24 24 0 0 1 12 -20.784609690827',
  'M63 136.75a24 24 0 0 1 24 0l36.621778264911 21.143593539449a24 24 0 0 1 12 20.784609690827l0 42.287187078898a24 24 0 0 1 -12 20.784609690827l-36.621778264911 21.143593539449a24 24 0 0 1 -24 0l-36.621778264911 -21.143593539449a24 24 0 0 1 -12 -20.784609690827l0 -42.287187078898a24 24 0 0 1 12 -20.784609690827',
  'M125.5 245.5a24 24 0 0 1 24 0l36.621778264911 21.143593539449a24 24 0 0 1 12 20.784609690827l0 42.287187078898a24 24 0 0 1 -12 20.784609690827l-36.621778264911 21.143593539449a24 24 0 0 1 -24 0l-36.621778264911 -21.143593539449a24 24 0 0 1 -12 -20.784609690827l0 -42.287187078898a24 24 0 0 1 12 -20.784609690827',
  'M250.5 245.5a24 24 0 0 1 24 0l36.621778264911 21.143593539449a24 24 0 0 1 12 20.784609690827l0 42.287187078898a24 24 0 0 1 -12 20.784609690827l-36.621778264911 21.143593539449a24 24 0 0 1 -24 0l-36.621778264911 -21.143593539449a24 24 0 0 1 -12 -20.784609690827l0 -42.287187078898a24 24 0 0 1 12 -20.784609690827',
  'M313 136.75a24 24 0 0 1 24 0l36.621778264911 21.143593539449a24 24 0 0 1 12 20.784609690827l0 42.287187078898a24 24 0 0 1 -12 20.784609690827l-36.621778264911 21.143593539449a24 24 0 0 1 -24 0l-36.621778264911 -21.143593539449a24 24 0 0 1 -12 -20.784609690827l0 -42.287187078898a24 24 0 0 1 12 -20.784609690827',
];

type SpinnerProps = {
  color?: string;
  size?: 'small' | 'medium' | 'large';
  absoluteFill?: boolean;
}

const Spinner: FC<SpinnerProps> = ({
  color = '#FFFFFF',
  size = 'small',
  // absoluteFill = false,
}) => {
  return (
    <svg
      className={twMerge(
        size === 'small' && 'w-8 h-8 m-auto',
        size === 'medium' && 'w-12 h-12 m-auto',
        size === 'large' && 'w-20 h-20 m-auto',
        // absoluteFill && 'max-w-60 max-h-60'
      )}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 400 400"
    >
      {
        PATHS.map((d, index) => {
          return (
            <path
              key={d}
              className="origin-center transform-fill"
              d={d}
              fill={color}
            >
              <animateTransform
                attributeName="transform"
                type="scale"
                from={1}
                to={0}
                begin={-index / PATHS.length}
                dur="1s"
                repeatCount="indefinite"
              />
              <animate
                attributeName="fill-opacity"
                from={1}
                to={0}
                begin={-index / PATHS.length}
                dur="1s"
                repeatCount="indefinite"
              />
            </path>
          );
        })
      }
    </svg>
  );
};

export default Spinner;